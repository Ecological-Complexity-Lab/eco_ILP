model,parameter,best value (fold 1),best value (fold 2),best value (fold 3),best value (fold 4),best value (fold 5),range
RandomForestClassifier,feature_selector__k,70,40,70,50,70,"[10, 20, 30, 40, 50, 70]"
RandomForestClassifier,n_estimators,15,10,15,50,15,"[10, 15, 20, 50, 100, 300]"
RandomForestClassifier,min_samples_split,5,1,10,1,5,"[1, 2, 3, 4, 5, 10]"
RandomForestClassifier,min_samples_leaf,12,4,3,10,7,"[3, 4, 5, 6, 7, 8, 9, 10, 12, 15, 20]"
RandomForestClassifier,max_samples,0.6,0.1,0.4,0.7,0.4,"[0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9]"
RandomForestClassifier,max_leaf_nodes,128,16,16,16,32,"[2, 4, 8, 16, 32, 64, 128]"
RandomForestClassifier,max_features,log2,sqrt,log2,log2,log2,"['sqrt', 'log2']"
RandomForestClassifier,max_depth,30,60,20,,3,"[3, 5, 7, 10, 20, 30, 40, 50, 60, None]"
RandomForestClassifier,criterion,gini,entropy,entropy,gini,gini,"['gini', 'entropy']"
RandomForestClassifier,bootstrap,True,True,True,True,True,[True]
LogisticRegression,feature_selector__k,50,20,40,40,50,"[10, 20, 30, 40, 50, 70]"
LogisticRegression,solver,saga,saga,saga,saga,saga,"['newton-cg', 'lbfgs', 'sag']"
LogisticRegression,penalty,l2,l2,l2,l2,l1,"['l2', 'none']"
LogisticRegression,max_iter,300,300,300,300,300,[300]
LogisticRegression,C,0.001,0.001,0.001,0.001,0.001,"[100, 10, 1.0, 0.7, 0.5, 0.3, 0.1, 0.01, 0.001]"
XGBClassifier,feature_selector__k,30,30,70,40,50,"[10, 20, 30, 40, 50, 70]"
XGBClassifier,tree_method,hist,hist,hist,hist,hist,['hist']
XGBClassifier,subsample,0.5,0.2,0.5,0.9,0.8,"[0.1, 0.2, 0.30000000000000004, 0.4, 0.5, 0.6, 0.7000000000000001, 0.8, 0.9, 1.0]"
XGBClassifier,reg_lambda,100,0.1,100,0,1e-05,"[0, 1e-05, 0.01, 0.1, 1, 100]"
XGBClassifier,reg_alpha,100,0,1,100,1,"[0, 1e-05, 0.01, 0.1, 1, 100]"
XGBClassifier,objective,binary:logistic,binary:logistic,binary:logistic,binary:logistic,binary:logistic,['binary:logistic']
XGBClassifier,n_estimators,30,50,60,60,10,"[10, 20, 30, 40, 50, 60, 70, 80, 90, 100]"
XGBClassifier,max_depth,7,11,15,,5,"[1, 3, 5, 7, 9, 11, 13, 15, 17, 19, None]"
XGBClassifier,learning_rate,0.001,0.001,0.1,0.01,0.01,"[0.001, 0.01, 0.05, 0.1, 0.2, 0.3]"
XGBClassifier,gamma,0,0.1,0.3,1,0.5,"[0, 0.1, 0.3, 0.5, 1]"
XGBClassifier,colsample_bytree,0.2,0.4,0.2,0.1,0.30000000000000004,"[0.1, 0.2, 0.30000000000000004, 0.4, 0.5, 0.6, 0.7000000000000001, 0.8, 0.9, 1.0]"
XGBClassifier,booster,gbtree,gbtree,gbtree,gbtree,gbtree,['gbtree']
